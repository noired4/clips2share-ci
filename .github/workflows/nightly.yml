name: Nightly Sync and Build

on:
  schedule:
    - cron: '0 3 * * *'  # Every day at 03:00 UTC
  workflow_dispatch:

jobs:
  sync-build-push:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Clone clips2share repo
        run: |
          git clone https://github.com/noired4/clips2share.git
          cd clips2share
          git config --global user.name "noired4"
          git config --global user.email "noired@users.noreply.codeberg.org"
          git remote set-url origin https://noired4:${{ secrets.GH_PUSH_TOKEN }}@github.com/noired4/clips2share.git

          echo "Adding Codeberg remote..."
          git remote add codeberg https://codeberg.org/noired/clips2share.git
          git fetch codeberg --tags --prune

          echo "Syncing branches from Codeberg..."
          for branch in $(git branch -r | grep codeberg/ | grep -v 'HEAD' | sed 's|codeberg/||'); do
            git checkout -B "$branch" "codeberg/$branch"
            git push origin "$branch" --force
          done

      - name: Inject GitHub-only disclaimer into README.md (no commit)
        run: |
          cd clips2share
          disclaimer="> ðŸ“¦ This is a GitHub mirror of the [original clips2share repository on Codeberg](https://codeberg.org/c2s/clips2share).\n>\n> Please [file issues](https://codeberg.org/c2s/clips2share/issues) and [submit pull requests](https://codeberg.org/c2s/clips2share/pulls) **on Codeberg, not here**."

          if [ -f README.md ] && ! grep -q "This is a GitHub mirror" README.md; then
            awk -v d="$disclaimer" '
              /^# / {
                print;
                print "";
                print d;
                next
              }
              { print }
            ' README.md > README.tmp && mv README.tmp README.md
          fi

      - name: Check for recent commits in dev/integration
        id: recent_changes
        run: |
          cd clips2share
          git checkout dev/integration
          COMMITS=$(git log --since="1 day ago" --pretty=oneline)
          echo "Found commits:"
          echo "$COMMITS"
          if [ -z "$COMMITS" ]; then
            echo "No recent commits in the last 24 hours."
            echo "skip_build=true" >> "$GITHUB_OUTPUT"
          else
            echo "Recent changes detected."
            echo "skip_build=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build Docker image from dev/integration
        if: steps.recent_changes.outputs.skip_build == 'false'
        run: |
          cd clips2share
          git checkout dev/integration
          docker build -t clips2share:dev .
          docker tag clips2share:dev ghcr.io/noired4/clips2share:dev

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image to GHCR
        if: steps.recent_changes.outputs.skip_build == 'false'
        run: docker push ghcr.io/noired4/clips2share:dev
